
Vamos implantar uma base PostgreSQL na AWS. Entender os principais parâmetros de configuração e fazer uma conexão para testar.

1. Abrir o RDS na AWS - Sempre verificar a região para ver qual está sendo criada.
2. Menu navegação → Databases → Create Database - **Escolher um método de criação de banco de dados:** Temos a opção entre escolher o Standard ou o Easy. **Opções de mecanismo:** Temos o Amazon Aurora, MySQL, MariaDB, PostgreSQL, Oracle e Microsoft SQL Server, vamos escolher o PostgreSQL e deixar na versão *default*. **Modelos:**  Vamos escolher o free-tier, os modelos servem para fazer um auto-complete nas configurações. **Configurações:** Damos um nome ao *database*, criamos um nome para o *Master username* e uma senha. **Configuração da instância:** A AWS já marca automaticamente uma máquina simples por estarmos usando o free-tier. **Armazenamento:**  Podemos aqui selecionar o tipo de disco que desejamos trabalhar, a capacidade atual e o escalonamento, porém para o teste em questão não é necessário marcar o escalonamento. **Disponibilidade e durabilidade:** Teremos uma cópia dos dados em outras zonas da região. **Conectividade:** Iremos verificar qual a VPC (Virtual Private Cloud) que é a rede privada da AWS. E precisaremos criar *subnets*, nada mais são que a restrição dos IPs possíveis de conectar na VPC. Em **Acesso público**, precisamos marcar SIM para que o database fique exposto para a internet, se marcar Não, o IP da AWS não será público, e só será possível acessar o database dentro de uma máquina virtual criada dentro do VPC (que é o padrão recomendado pela segurança do database). Em **Grupos de segurança da VPC**, servem para definir que tipo de conexão está definida e que porta de conexão vamos abrir, vamos criar um novo security group e damos um nome a ele. **Autenticação do database:** Podemos ter via password, password e IAM ou usando password e Kerberos. **Configurações** **adicionais:** Por default, toda instância RDS vem com **backup** automático, mas vamos desabilitar para não gerar custos a mais. Performance insights, a AWS apresenta alguns insights de performance para melhora da database, mas não vamos utilizar também, nem a exportação de logs, nem monitoramento e nem criptografia. **Proteção contra exclusão:** Se estiver marcada só poderemos excluir esse database se criarmos um novo 
3. Configurada, colocarmos em criação e vamos conectar com o **DBeaver** quando estiver disponível. Clicando na database teremos informações importantes, teremos em **Endpoint & secutity:**  Endpoint (host do database), qual a porta, o VPC, a zona de disponibilidade, qual o grupo de subnet, os subnets , se está acessível publicamente e os grupos de segurança da VPC. - Existe uma regrinha na AWS que diz "Tudo que não está explicitamente permitido está implicitamente negado”. - Vamos então no **Grupo de Segurança da VPC** para vermos se existe uma permissão de conexão dentro dele, o que interessa para sabermos isso está em **Inbound rules (regras de entrada)**, e ela tem uma regra de entrada de apenas um IP específico (provavelmente será rastreado o IP do computador para ser inserido), então, se quisermos dar acesso à um IP precisamos adicionar o IP no nos *Inbound rules*.
4. No DBeaver, vamos criar uma conexão PostgreSQL, pegamos o endpoint e colocamos no host. Colocamos o username e a senha, e se tivermos o acesso liberado para o IP podemos conectar com sucesso.
5. Para deletar é fácil, é ir no Amazon RDS → Databases → Marcar o database e selecionar para deletar.